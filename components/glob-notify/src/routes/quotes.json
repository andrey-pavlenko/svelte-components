[
	{
		"id": 0,
		"text": "Программирование сегодня — это гонка разработчиков программ, стремящихся писать программы с большей и лучшей идиотоустойчивостью, и вселенной, которая пытается создать больше отборных идиотов. Пока вселенная побеждает.",
		"author": "Rick Cook"
	},

	{
		"id": 1,
		"text": "Низкоуровневый язык — это когда требуется внимание к вещам, которые никак не связаны с программами на этом языке.",
		"author": "Alan J. Perlis"
	},

	{
		"id": 2,
		"text": "Программирование на С похоже на быстрые танцы на только что отполированном полу людей с острыми бритвами в руках.",
		"author": "Waldi Ravens"
	},

	{
		"id": 3,
		"text": "Не волнуйтесь, если что-то не работает. Если бы всё работало, вас бы уволили.",
		"author": "Mosher’s Law of Software Engineering"
	},

	{
		"id": 4,
		"text": "Для меня долгое время было загадкой, как что-то очень дорогое и технологичное может быть столь бесполезным. И вскоре я осознал, что компьютер — это глупая машина, обладающая способностями выполнять невероятно умные вещи, тогда как программисты — это умные люди, у которых талант делать невероятные глупости. Короче, они нашли друг друга.",
		"author": "Bill Bryson"
	},

	{
		"id": 5,
		"text": "В хорошем дизайне добавление чего-то стоит дешевле, чем сама эта вещь.",
		"author": "Thomas C. Gale"
	},

	{
		"id": 6,
		"text": "В теории, теория и практика неразделимы. На практике это не так.",
		"author": "Yoggi Berra"
	},

	{
		"id": 7,
		"text": "Perl — это тот язык, который одинаково выглядит как до, так и после RSA шифрования.",
		"author": "Keith Bostic"
	},

	{
		"id": 8,
		"text": "Я изобрел понятие «объектно-ориентированный», и могу заявить, что не имел в виду C++.",
		"author": "Alan Kay"
	},

	{
		"id": 9,
		"text": "Иногда лучше остаться спать дома в понедельник, чем провести всю неделю в отладке написанного в понедельник кода.",
		"author": "Christopher Thompson"
	},

	{
		"id": 10,
		"text": "Измерять продуктивность программиста подсчетом строк кода — это так же, как оценивать постройку самолета по его весу.",
		"author": "Bill Gates"
	},

	{
		"id": 11,
		"text": "Отладка кода вдвое сложнее, чем его написание. Так что если вы пишете код настолько умно, насколько можете, то вы по определению недостаточно сообразительны, чтобы его отлаживать.",
		"author": "Brian W. Kernighan"
	},

	{
		"id": 12,
		"text": "Многие из вас знакомы с достоинствами программиста. Их всего три, и разумеется это: лень, нетерпеливость и гордыня.",
		"author": "Larry Wall"
	},

	{
		"id": 13,
		"text": "Большинство программ на сегодняшний день подобны египетским пирамидам из миллиона кирпичиков друг на друге и без конструктивной целостности — они просто построены грубой силой и тысячами рабов.",
		"author": "Alan Kay"
	},

	{
		"id": 14,
		"text": "Большинство хороших программистов делают свою работу не потому, что ожидают оплаты или признания, а потому что получают удовольствие от программирования.",
		"author": "Linus Torvalds"
	},

	{
		"id": 15,
		"text": "Всегда пишите код так, будто сопровождать его будет склонный к насилию психопат, который знает, где вы живете.",
		"author": "Martin Golding"
	},

	{
		"id": 16,
		"text": "Программы должны писаться для людей, которые будут их читать, а машины, которые будут эти программы исполнять — второстепенны.",
		"author": "Harold Abelson"
	},

	{
		"id": 17,
		"text": "Люди, которые думают, что ненавидят компьютеры, на самом деле ненавидят плохих программистов.",
		"author": "Larry Niven"
	},

	{
		"id": 18,
		"text": "Если вы дадите человеку программу, то займете его на один день. Если вы научите человека программировать, то займете его на всю жизнь.",
		"author": "Waseem Latif"
	},

	{
		"id": 19,
		"text": "Язык, который не меняет вашего представления о программировании, недостоин изучения.",
		"author": "Alan J. Perlis"
	},

	{
		"id": 20,
		"text": "Мы наблюдаем общество, которое все больше зависит от машин, но при этом использует их все неэффективнее.",
		"author": "Douglas Rushkoff"
	},

	{
		"id": 21,
		"text": "Иногда лучшие программы создаются на бумажке. Запрограммировать их — второстепенная вещь.",
		"author": "Max Kanat-Alexander"
	},

	{ "id": 22, "text": "Отладка кода — это как охота. Охота на баги.", "author": "Amit Kalantri" },

	{
		"id": 23,
		"text": "Любой дурак сможет написать код, который поймет машина. Хорошие программисты пишут код, который сможет понять человек.",
		"author": "Martin Fowler"
	},

	{
		"id": 24,
		"text": "Программирование — это разбиение чего-то большого и невозможного на что-то маленькое и вполне реальное.",
		"author": "Jazzwant"
	},

	{
		"id": 25,
		"text": "Программисты — не математики, как бы нам этого ни хотелось.",
		"author": "Richard P. Gabriel"
	},

	{
		"id": 26,
		"text": "Программирование — это сложно. Основные правила, на которых все строится, очень просты, но по мере разработки программа сама начинает вводить свои правила и законы. Таким образом, программист строит лабиринт, в котором сам же может и потеряться.",
		"author": "Marijn Haverbeke"
	},

	{
		"id": 27,
		"text": "Функции, которые производят значения, легче комбинировать новыми способами, чем те, которые производят сайд-эффекты.",
		"author": "Marijn Haverbeke"
	},

	{ "id": 28, "text": "Простота — залог надежности.", "author": "Edsger W. Dijkstra" },

	{
		"id": 29,
		"text": "Если вы хотите, чтобы код было легко и быстро писать — делайте его удобным для чтения.",
		"author": "Robert C. Martin"
	},

	{
		"id": 30,
		"text": "Если вы хорошо отлаживаете программы, значит, вы провели много времени, делая это. Я не хочу уметь хорошо отлаживать программы.",
		"author": "Michael C. Feathers"
	},

	{ "id": 31, "text": "Работает? Не трогай.", "author": "Любой программист" },

	{
		"id": 32,
		"text": "При помощи C вы легко можете выстрелить себе в ногу. При помощи C++ это сделать сложнее, но если это произойдёт, вам оторвёт всю ногу целиком.",
		"author": "Bjarne Stroustrup"
	},

	{
		"id": 33,
		"text": "Последние нововведения в C++ были созданы, чтобы исправить предыдущие нововведения.",
		"author": "David Jameson"
	},

	{
		"id": 34,
		"text": "Java — это C++, из которого убрали все пистолеты, ножи и дубинки.",
		"author": "James Gosling"
	},

	{
		"id": 35,
		"text": "Если бы в Java действительно работала сборка мусора, большинство программ бы удаляли сами себя при первом же запуске.",
		"author": "Robert Sewell"
	},

	{
		"id": 36,
		"text": "Есть всего два типа языков программирования: те, на которые люди всё время ругаются, и те, которые никто не использует.",
		"author": "Bjarne Stroustrup"
	},

	{
		"id": 37,
		"text": "Плохое имя метода сродни предвыборным обещаниям политиков. Вроде о чем-то оно говорит, но если задуматься — непонятно о чем.",
		"author": "C. MacConnell"
	},

	{
		"id": 38,
		"text": "Неработающая программа обычно приносит меньше вреда, чем работающая плохо.",
		"author": "Dave Thomas"
	},

	{
		"id": 39,
		"text": "Насколько проще было бы писать программы, если бы не заказчики.",
		"author": "R. S. Martin"
	},

	{
		"id": 40,
		"text": "Молодые специалисты не умеют работать, а опытные специалисты умеют не работать.",
		"author": "Alexander Golov"
	},

	{
		"id": 41,
		"text": "Почаще задавайте себе вопрос «Что мне скрыть?» и вы удивитесь, сколько проблем проектирования растает на ваших глазах.",
		"author": "C. MacConnell"
	},

	{ "id": 42, "text": "Преждевременная оптимизация — корень всех зол.", "author": "Donald Knuth" },

	{
		"id": 43,
		"text": "Чтобы написать чистый код, мы сначала пишем грязный код, а затем рефакторим его.",
		"author": "Robert Martin"
	},

	{
		"id": 44,
		"text": "Помимо математических способностей, жизненно важным качеством программиста является исключительно хорошее владение родным языком.",
		"author": "Edsger W. Dijkstra"
	},

	{
		"id": 45,
		"text": "Для каждой сложной задачи существует решение, которое является быстрым, простым и неправильным.",
		"author": "H. L. Mencken"
	},

	{
		"id": 46,
		"text": "Механизмы управления доступом в С++ обеспечивают защиту от несчастного случая, но не от мошенников.",
		"author": "Bjarne Stroustrup"
	},

	{
		"id": 47,
		"text": "Думаю, искусство программировать немногим сложнее других человеческих навыков. Программирование делает вас лучше точно так же, как вам помогают развиваться изучение иностранного языка, математики или чтение книг.",
		"author": "Jack Dorsey"
	},

	{
		"id": 48,
		"text": "Аналогично тому, как написание картины является искусством для души, так и написание программы является искусством для разума.",
		"author": "Volnik"
	},

	{
		"id": 49,
		"text": "Тестирование не позволяет обнаружить такие ошибки, как создание не того приложения.",
		"author": "Steve McConnell"
	},

	{
		"id": 50,
		"text": "Некоторые люди во время решения некой проблемы думают: «Почему бы мне не использовать регулярные выражения?». После этого у них уже две проблемы…",
		"author": "Jamie Zawinski"
	},

	{
		"id": 51,
		"text": "Я не умею делать скриншоты, потому что я обычно работаю на компьютере в текстовом режиме.",
		"author": "Richard Stallman"
	},

	{
		"id": 52,
		"text": "Ходить по воде и разрабатывать программы, следуя спецификации, очень просто… если они заморожены.",
		"author": "Edward V Berard"
	},

	{
		"id": 53,
		"text": "Я думаю, что Microsoft назвал технологию .NET для того, чтобы она не показывалась в списках директорий Unix.",
		"author": "Oktal"
	},

	{
		"id": 54,
		"text": "Учитывая текущее плачевное состояние наших программ, можно сказать, что программирование определенно всё ещё черная магия, и пока мы не можем называть его технической дисциплиной.",
		"author": "Bill Clinton"
	},

	{
		"id": 55,
		"text": "Намного легче портировать шелл, чем скрипт на шелле.",
		"author": "Larry Wall"
	},

	{
		"id": 56,
		"text": "Изучение программирования имеет такое же отношение к проектированию интерактивных систем, как обучение слепой печати к написанию стихов.",
		"author": "Ted Nelson"
	},

	{
		"id": 57,
		"text": "Сначала учите науку программирования и всю теорию. Далее выработайте свой программистский стиль. Затем забудьте всё и просто программируйте.",
		"author": "George Carrette"
	},

	{
		"id": 58,
		"text": "Трудность работы с программистом заключается в том, что вы не можете понять, что он делает, до тех пор, пока не стало слишком поздно.",
		"author": "Seymour Cray"
	},

	{
		"id": 59,
		"text": "Меня два раза спрашивали [члены Парламента]: «Скажите на милость, мистер Бэббидж, что случится, если вы введёте в машину неверные цифры? Cможем ли мы получить правильный ответ?» Я не могу себе даже представить, какая путаница в голове может привести к подобному вопросу.",
		"author": "Charles Babbage"
	},

	{
		"id": 60,
		"text": "С имеет мощь ассемблера и удобство… ассемблера.",
		"author": "Dennis Ritchie"
	},

	{
		"id": 61,
		"text": "UNIX невероятно прост, но нужно быть гением, чтобы понять эту простоту.",
		"author": "Dennis Ritchie"
	},

	{
		"id": 62,
		"text": "Нельзя доверять коду, который вы не написали полностью сами.",
		"author": "Ken Thompson"
	},

	{
		"id": 63,
		"text": "Ограничение возможностей языка с целью предотвращения программистских ошибок в лучшем случае опасно.",
		"author": "Bjarne Stroustrup"
	},

	{
		"id": 64,
		"text": "Если вы считаете, что С++ труден, попытайтесь выучить английский.",
		"author": "Bjarne Stroustrup"
	},

	{
		"id": 65,
		"text": "Что бы нового мы ни создавали, мы должны дать людям возможность переходить от старых инструментов и идей к новым.",
		"author": "Bjarne Stroustrup"
	},

	{
		"id": 66,
		"text": "Небольшие программы случайно компилируются и выполняются правильно при первой же попытке. Но если это происходит с любой не тривиальной программой, то это очень и очень подозрительно.",
		"author": "Bjarne Stroustrup"
	},

	{
		"id": 67,
		"text": "Модульность — фундаментальный аспект всех успешно работающих крупных систем.",
		"author": "Bjarne Stroustrup"
	},

	{
		"id": 68,
		"text": "Доказательство с помощью аналогий — это обман.",
		"author": "Bjarne Stroustrup"
	},

	{
		"id": 69,
		"text": "Программа, которая не тестировалась, не является рабочей.",
		"author": "Bjarne Stroustrup"
	},

	{ "id": 70, "text": "Программирование — это не наука, а ремесло.", "author": "Richard Stallman" },

	{
		"id": 71,
		"text": "Люди думают, что безопасность — это существительное, что-то, что можно купить. На самом же деле безопасность — это абстрактное понятие, как счастье.",
		"author": "James Gosling"
	},

	{
		"id": 72,
		"text": "Если бы меня попросили выбрать какой-нибудь современный язык на замену Java, я бы выбрал Scala.",
		"author": "James Gosling"
	},

	{
		"id": 73,
		"text": "Проблема С++ в том, что необходимо узнать всё о нём перед тем, как начать писать на нём все что угодно.",
		"author": "Larry Wall"
	},

	{
		"id": 74,
		"text": "Дизайн языка программирования — это как прогулка по парку. Парку Юрского Периода.",
		"author": "Larry Wall"
	},

	{
		"id": 75,
		"text": "Думаю, это будет новой фичей. Только не говорите никому, что она возникла случайно.",
		"author": "Larry Wall"
	},

	{
		"id": 76,
		"text": "Тяжело улучшать код, который до этого уже улучшали много раз.",
		"author": "Larry Wall"
	},

	{ "id": 77, "text": "Лень — главное достоинство программиста.", "author": "Larry Wall" },

	{ "id": 78, "text": "Чтобы понять алгоритм, нужно его увидеть.", "author": "Donald Knuth" },

	{
		"id": 79,
		"text": "У меня предчувствие, что неизвестные цепочки ДНК расшифруются в копирайты и патенты.",
		"author": "Donald Knuth"
	},

	{
		"id": 80,
		"text": "Если вы наслаждаетесь используемыми инструментами, то работа будет выполнена успешно.",
		"author": "Donald Knuth"
	},

	{
		"id": 81,
		"text": "Помните, что обычно есть решение проще и быстрее того, что первым приходит вам в голову.",
		"author": "Donald Knuth"
	},

	{
		"id": 82,
		"text": "Если оптимизировать всё, что можно, то вы будете вечно несчастным.",
		"author": "Donald Knuth"
	},

	{
		"id": 83,
		"text": "Алгоритм Евклида — дед всех алгоритмов, потому что это старейший нетривиальный алгоритм, доживший до наших дней.",
		"author": "Donald Knuth"
	},

	{ "id": 84, "text": "Легче изобрести будущее, чем предсказать его.", "author": "Alan Kay" },

	{ "id": 85, "text": "Программированию обычно учат на примерах.", "author": "Niklaus Wirth" },

	{
		"id": 86,
		"text": "Программы становятся медленнее быстрее, чем «железо» становится быстрее.",
		"author": "Niklaus Wirth"
	},

	{
		"id": 87,
		"text": "Я называю это моей ошибкой на миллиард. Изобретение нулевого указателя (null — прим. ред.) в 1965.",
		"author": "Tony Hoare"
	},

	{ "id": 88, "text": "Некоторые проблемы лучше не решать, а избегать.", "author": "Tony Hoare" },

	{
		"id": 89,
		"text": "Одно аккуратное измерение стоит тысячи мнений экспертов.",
		"author": "Grace Hopper"
	},

	{ "id": 90, "text": "У людей аллергия на перемены.", "author": "Grace Hopper" },

	{
		"id": 91,
		"text": "Мы не можем перекладывать свои ошибки на используемые технологии.",
		"author": "Tim Berners-Lee"
	},

	{
		"id": 92,
		"text": "Лень — естественное состояние программиста, после которого он рождает хороший алгоритм.",
		"author": "Народное творчество"
	},

	{
		"id": 93,
		"text": "Магия перестаёт существовать после того, как вы понимаете, как она работает.",
		"author": "Tim Berners-Lee"
	},

	{
		"id": 94,
		"text": "Программирование — это как бить себя по лицу: рано или поздно ваш нос будет кровоточить.",
		"author": "Kyle Woodbury"
	},

	{
		"id": 95,
		"text": "Способ использования интеллекта важнее, чем его уровень.",
		"author": "C. MacConnell"
	},

	{
		"id": 96,
		"text": "Компьютер позволяет нам совершать ошибки гораздо быстрее, чем любые другие изобретения человечества, за исключением, пожалуй, текилы и оружия.",
		"author": "Mitch Radcliffe"
	},

	{ "id": 97, "text": "640 Кб должно хватить для любых задач.", "author": "Bill Gates" },

	{
		"id": 98,
		"text": "Основная проблема программистов состоит в том, что их ошибки невозможно предугадать.",
		"author": "Seymour Cray"
	},

	{
		"id": 99,
		"text": "Два самых известных продукта, созданных в Университете Беркли — это UNIX и LSD. Это не может быть просто совпадением.",
		"author": "Jeremy S. Anderson"
	}
]

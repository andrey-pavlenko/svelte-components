{
  "total": 5,
  "components": [
    {
      "moduleName": "ColorEdit",
      "filePath": "ColorEdit.svelte",
      "props": [
        {
          "name": "class",
          "kind": "let",
          "description": "Custom CSS class to add to the `c-color-edit` base class for custom styling purposes",
          "type": "string",
          "value": "''",
          "isFunction": false,
          "isFunctionDeclaration": false,
          "isRequired": false,
          "constant": false,
          "reactive": false
        },
        {
          "name": "style",
          "kind": "let",
          "description": "Custom styles will be passed to the style attribute",
          "type": "string",
          "value": "''",
          "isFunction": false,
          "isFunctionDeclaration": false,
          "isRequired": false,
          "constant": false,
          "reactive": false
        },
        {
          "name": "color",
          "kind": "let",
          "description": "Color value. **Reactive**.\n\nNote! Components only use **hexadecimal** colors e.g. `#000`, `#f1f2f3`.\n\nDo not use a non-hexadecimal color value such as `red` or `rgb(128,128,128)`. `rgb()` or `hsl()` colors can be pre-converted to hexadecimal using the `rbgToHex` or `hslToHex` functions see [utils.js](https://github.com/andrey-pavlenko/svelte-components/blob/main/packages/color/utils.js).",
          "type": "string",
          "value": "'#000'",
          "isFunction": false,
          "isFunctionDeclaration": false,
          "isRequired": false,
          "constant": false,
          "reactive": true
        }
      ],
      "moduleExports": [],
      "slots": [],
      "events": [],
      "typedefs": [],
      "componentComment": "\n@order 10\n\nComponent for editing numeric values or a hexadecimal color string.\n\nContains buttons for switching editing modes: hex, rgba, hsla.\n\n\n```tsx\n<script>\n  let color='#f00';\n</script>\n<ColorEdit bind:color />\n```\n\nBasic styles are described in the  <a href=\"https://github.com/andrey-pavlenko/svelte-components/blob/main/packages/color/color-edit.css\" target=\"_blank\">`color-edit.css`</a> file."
    },
    {
      "moduleName": "ColorEditHex",
      "filePath": "ColorEditHex.svelte",
      "props": [
        {
          "name": "class",
          "kind": "let",
          "description": "Custom CSS class to add to the `c-coloredit__input--text` base class for custom styling purposes",
          "type": "string",
          "value": "''",
          "isFunction": false,
          "isFunctionDeclaration": false,
          "isRequired": false,
          "constant": false,
          "reactive": false
        },
        {
          "name": "color",
          "kind": "let",
          "description": "Color value. **Reactive**.\n\nNote! Components only use **hexadecimal** colors e.g. `#000`, `#f1f2f3`.",
          "type": "string",
          "value": "'#000'",
          "isFunction": false,
          "isFunctionDeclaration": false,
          "isRequired": false,
          "constant": false,
          "reactive": true
        },
        {
          "name": "focus",
          "kind": "function",
          "description": "Focuses the input element",
          "type": "() => any",
          "value": "() => {     input?.focus(); }",
          "isFunction": true,
          "isFunctionDeclaration": true,
          "isRequired": false,
          "constant": false,
          "reactive": false
        }
      ],
      "moduleExports": [],
      "slots": [],
      "events": [],
      "typedefs": [],
      "componentComment": "\n@order 90\n\nComponent for editing a hexadecimal color string. Used in the `ColorEdit` component.\n\n```tsx\n<script>\n  let color='#f00';\n</script>\n<ColorEditHex bind:color />\n```"
    },
    {
      "moduleName": "ColorEditHsla",
      "filePath": "ColorEditHsla.svelte",
      "props": [
        {
          "name": "class",
          "kind": "let",
          "description": "Custom CSS class to add to the `c-coloredit__input--number` base class for custom styling purposes",
          "type": "string",
          "value": "''",
          "isFunction": false,
          "isFunctionDeclaration": false,
          "isRequired": false,
          "constant": false,
          "reactive": false
        },
        {
          "name": "color",
          "kind": "let",
          "description": "Color value. **Reactive**.\n\nNote! Components only use **hexadecimal** colors e.g. `#000`, `#f1f2f3`.",
          "type": "string",
          "value": "'#000'",
          "isFunction": false,
          "isFunctionDeclaration": false,
          "isRequired": false,
          "constant": false,
          "reactive": true
        },
        {
          "name": "focus",
          "kind": "function",
          "description": "Focuses the first input element",
          "type": "() => any",
          "value": "() => {     input?.focus(); }",
          "isFunction": true,
          "isFunctionDeclaration": true,
          "isRequired": false,
          "constant": false,
          "reactive": false
        }
      ],
      "moduleExports": [],
      "slots": [],
      "events": [],
      "typedefs": [],
      "componentComment": "\n@order 99\n\nComponent for editing hsla color value. Used in the `ColorEdit` component.\n\n```tsx\n<script>\n  let color='#f00';\n</script>\n<ColorEditHsla bind:color />\n```"
    },
    {
      "moduleName": "ColorEditRgba",
      "filePath": "ColorEditRgba.svelte",
      "props": [
        {
          "name": "class",
          "kind": "let",
          "description": "Custom CSS class to add to the `c-coloredit__input--number` base class for custom styling purposes",
          "type": "string",
          "value": "''",
          "isFunction": false,
          "isFunctionDeclaration": false,
          "isRequired": false,
          "constant": false,
          "reactive": false
        },
        {
          "name": "color",
          "kind": "let",
          "description": "Color value. **Reactive**.\n\nNote! Components only use **hexadecimal** colors e.g. `#000`, `#f1f2f3`.",
          "type": "string",
          "value": "'#000'",
          "isFunction": false,
          "isFunctionDeclaration": false,
          "isRequired": false,
          "constant": false,
          "reactive": true
        },
        {
          "name": "focus",
          "kind": "function",
          "description": "Focuses the first input element",
          "type": "() => any",
          "value": "() => {     input?.focus(); }",
          "isFunction": true,
          "isFunctionDeclaration": true,
          "isRequired": false,
          "constant": false,
          "reactive": false
        }
      ],
      "moduleExports": [],
      "slots": [],
      "events": [],
      "typedefs": [],
      "componentComment": "\n@order 98\n\nComponent for editing rgba color value. Used in the `ColorEdit` component.\n\n```tsx\n<script>\n  let color='#f00';\n</script>\n<ColorEditHsla bind:color />\n```"
    },
    {
      "moduleName": "ColorPicker",
      "filePath": "ColorPicker.svelte",
      "props": [
        {
          "name": "class",
          "kind": "let",
          "description": "Custom CSS class to add to the `c-color-picker` base class for custom styling purposes",
          "type": "string",
          "value": "''",
          "isFunction": false,
          "isFunctionDeclaration": false,
          "isRequired": false,
          "constant": false,
          "reactive": false
        },
        {
          "name": "style",
          "kind": "let",
          "description": "Custom styles will be passed to the `style` attribute",
          "type": "string",
          "value": "''",
          "isFunction": false,
          "isFunctionDeclaration": false,
          "isRequired": false,
          "constant": false,
          "reactive": false
        },
        {
          "name": "color",
          "kind": "let",
          "description": "Color value. **Reactive**.\n\nNote! Components only use **hexadecimal** colors e.g. `#000`, `#f1f2f3`.\n\nDo not use a non-hexadecimal color value such as `red` or `rgb(128,128,128)`. `rgb()` or `hsl()` colors can be pre-converted to hexadecimal using the `rbgToHex` or `hslToHex` functions see [utils.js](https://github.com/andrey-pavlenko/svelte-components/blob/main/packages/color/utils.js).",
          "type": "string",
          "value": "'#000'",
          "isFunction": false,
          "isFunctionDeclaration": false,
          "isRequired": false,
          "constant": false,
          "reactive": true
        },
        {
          "name": "debounce",
          "kind": "let",
          "description": "Color value update debounce interval",
          "type": "number",
          "value": "0",
          "isFunction": false,
          "isFunctionDeclaration": false,
          "isRequired": false,
          "constant": false,
          "reactive": false
        }
      ],
      "moduleExports": [],
      "slots": [],
      "events": [],
      "typedefs": [],
      "componentComment": "\n@order 0\n\nComponent for picking a color with transparency. The color value is hexadecimal.\n\nDependence: `lodash.debounce`\n\nInspired by:\n- [svelte-awesome-color-picker](https://svelte-awesome-color-picker.vercel.app/)\n- [svelte-color-picker](https://github.com/efeskucuk/svelte-color-picker)\n- [Coloris](https://github.com/mdbassit/Coloris)\n\n```tsx\n<script>\n  let color='#f00';\n</script>\n<ColorPicker bind:color />\n```\n\nBasic styles are described in the <a href=\"https://github.com/andrey-pavlenko/svelte-components/blob/main/packages/color/color-picker.css\" target=\"_blank\">`color-picker.css`</a> file.\n\n**Note!** Specify the height of the `ColorPicker` component using the `class` or `style` attributes."
    }
  ]
}
